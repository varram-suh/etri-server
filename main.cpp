#include "mainwindow.h"
#include <QApplication>
#include <QTime>
#include <sstream>
#include <iostream>
#include <boost/asio.hpp>
#include "asio-server.h"
#include "license-session.h"
// polyline.cpp
// #include "qc-message.pb.h"  // generated by calling "protoc polyline.proto"

using io_service = boost::asio::io_service;
int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();
    return a.exec();
    printf("!!");

    // while(true) {
    //     a.processEvents(); //(a is a QApplication created during the init, should use a better name i guess)
    //     QTime currentTime= QTime::currentTime();
    //     // int timeSinceLastUpdate = lastUpdate.msecsTo(currentTime);
    // }
    // a.exit();
    // try {
    //     io_service ios;
    //     ASIOServer<LicenseSession> s(ios, 7781);
    //     //ASIOServer<QcSession> s2(io_service, 20000);
    //     //std::shared_ptr<GuiSession> s3(new GuiSession(io_service, window, screen));
    //     //printer p(io_service);
    //     ios.run();
    // }
    // catch (std::exception& e) {
    // }

    // return 0;
    return a.exec();
}
