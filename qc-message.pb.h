// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qc-message.proto

#ifndef PROTOBUF_INCLUDED_qc_2dmessage_2eproto
#define PROTOBUF_INCLUDED_qc_2dmessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_qc_2dmessage_2eproto 

namespace protobuf_qc_2dmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_qc_2dmessage_2eproto
class Imu;
class ImuDefaultTypeInternal;
extern ImuDefaultTypeInternal _Imu_default_instance_;
class Protocol;
class ProtocolDefaultTypeInternal;
extern ProtocolDefaultTypeInternal _Protocol_default_instance_;
namespace google {
namespace protobuf {
template<> ::Imu* Arena::CreateMaybeMessage<::Imu>(Arena*);
template<> ::Protocol* Arena::CreateMaybeMessage<::Protocol>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Imu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Imu) */ {
 public:
  Imu();
  virtual ~Imu();

  Imu(const Imu& from);

  inline Imu& operator=(const Imu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Imu(Imu&& from) noexcept
    : Imu() {
    *this = ::std::move(from);
  }

  inline Imu& operator=(Imu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Imu* internal_default_instance() {
    return reinterpret_cast<const Imu*>(
               &_Imu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Imu* other);
  friend void swap(Imu& a, Imu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Imu* New() const final {
    return CreateMaybeMessage<Imu>(NULL);
  }

  Imu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Imu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Imu& from);
  void MergeFrom(const Imu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Imu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Imu)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_qc_2dmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Protocol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol) */ {
 public:
  Protocol();
  virtual ~Protocol();

  Protocol(const Protocol& from);

  inline Protocol& operator=(const Protocol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Protocol(Protocol&& from) noexcept
    : Protocol() {
    *this = ::std::move(from);
  }

  inline Protocol& operator=(Protocol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Protocol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Protocol* internal_default_instance() {
    return reinterpret_cast<const Protocol*>(
               &_Protocol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Protocol* other);
  friend void swap(Protocol& a, Protocol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Protocol* New() const final {
    return CreateMaybeMessage<Protocol>(NULL);
  }

  Protocol* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Protocol>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Protocol& from);
  void MergeFrom(const Protocol& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Protocol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes video = 4;
  bool has_video() const;
  void clear_video();
  static const int kVideoFieldNumber = 4;
  const ::std::string& video() const;
  void set_video(const ::std::string& value);
  #if LANG_CXX11
  void set_video(::std::string&& value);
  #endif
  void set_video(const char* value);
  void set_video(const void* value, size_t size);
  ::std::string* mutable_video();
  ::std::string* release_video();
  void set_allocated_video(::std::string* video);

  // optional bytes audio = 5;
  bool has_audio() const;
  void clear_audio();
  static const int kAudioFieldNumber = 5;
  const ::std::string& audio() const;
  void set_audio(const ::std::string& value);
  #if LANG_CXX11
  void set_audio(::std::string&& value);
  #endif
  void set_audio(const char* value);
  void set_audio(const void* value, size_t size);
  ::std::string* mutable_audio();
  ::std::string* release_audio();
  void set_allocated_audio(::std::string* audio);

  // optional .Imu imu = 6;
  bool has_imu() const;
  void clear_imu();
  static const int kImuFieldNumber = 6;
  private:
  const ::Imu& _internal_imu() const;
  public:
  const ::Imu& imu() const;
  ::Imu* release_imu();
  ::Imu* mutable_imu();
  void set_allocated_imu(::Imu* imu);

  // optional int32 left_motor = 2;
  bool has_left_motor() const;
  void clear_left_motor();
  static const int kLeftMotorFieldNumber = 2;
  ::google::protobuf::int32 left_motor() const;
  void set_left_motor(::google::protobuf::int32 value);

  // optional int32 right_motor = 3;
  bool has_right_motor() const;
  void clear_right_motor();
  static const int kRightMotorFieldNumber = 3;
  ::google::protobuf::int32 right_motor() const;
  void set_right_motor(::google::protobuf::int32 value);

  // optional int32 ksoo = 7;
  bool has_ksoo() const;
  void clear_ksoo();
  static const int kKsooFieldNumber = 7;
  ::google::protobuf::int32 ksoo() const;
  void set_ksoo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol)
 private:
  void set_has_left_motor();
  void clear_has_left_motor();
  void set_has_right_motor();
  void clear_has_right_motor();
  void set_has_video();
  void clear_has_video();
  void set_has_audio();
  void clear_has_audio();
  void set_has_imu();
  void clear_has_imu();
  void set_has_ksoo();
  void clear_has_ksoo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr video_;
  ::google::protobuf::internal::ArenaStringPtr audio_;
  ::Imu* imu_;
  ::google::protobuf::int32 left_motor_;
  ::google::protobuf::int32 right_motor_;
  ::google::protobuf::int32 ksoo_;
  friend struct ::protobuf_qc_2dmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Imu

// optional int32 x = 1;
inline bool Imu::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imu::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imu::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imu::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Imu::x() const {
  // @@protoc_insertion_point(field_get:Imu.x)
  return x_;
}
inline void Imu::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Imu.x)
}

// optional int32 y = 2;
inline bool Imu::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imu::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imu::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imu::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Imu::y() const {
  // @@protoc_insertion_point(field_get:Imu.y)
  return y_;
}
inline void Imu::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Imu.y)
}

// -------------------------------------------------------------------

// Protocol

// optional int32 left_motor = 2;
inline bool Protocol::has_left_motor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Protocol::set_has_left_motor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Protocol::clear_has_left_motor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Protocol::clear_left_motor() {
  left_motor_ = 0;
  clear_has_left_motor();
}
inline ::google::protobuf::int32 Protocol::left_motor() const {
  // @@protoc_insertion_point(field_get:Protocol.left_motor)
  return left_motor_;
}
inline void Protocol::set_left_motor(::google::protobuf::int32 value) {
  set_has_left_motor();
  left_motor_ = value;
  // @@protoc_insertion_point(field_set:Protocol.left_motor)
}

// optional int32 right_motor = 3;
inline bool Protocol::has_right_motor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Protocol::set_has_right_motor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Protocol::clear_has_right_motor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Protocol::clear_right_motor() {
  right_motor_ = 0;
  clear_has_right_motor();
}
inline ::google::protobuf::int32 Protocol::right_motor() const {
  // @@protoc_insertion_point(field_get:Protocol.right_motor)
  return right_motor_;
}
inline void Protocol::set_right_motor(::google::protobuf::int32 value) {
  set_has_right_motor();
  right_motor_ = value;
  // @@protoc_insertion_point(field_set:Protocol.right_motor)
}

// optional bytes video = 4;
inline bool Protocol::has_video() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Protocol::set_has_video() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Protocol::clear_has_video() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Protocol::clear_video() {
  video_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video();
}
inline const ::std::string& Protocol::video() const {
  // @@protoc_insertion_point(field_get:Protocol.video)
  return video_.GetNoArena();
}
inline void Protocol::set_video(const ::std::string& value) {
  set_has_video();
  video_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.video)
}
#if LANG_CXX11
inline void Protocol::set_video(::std::string&& value) {
  set_has_video();
  video_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.video)
}
#endif
inline void Protocol::set_video(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_video();
  video_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.video)
}
inline void Protocol::set_video(const void* value, size_t size) {
  set_has_video();
  video_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.video)
}
inline ::std::string* Protocol::mutable_video() {
  set_has_video();
  // @@protoc_insertion_point(field_mutable:Protocol.video)
  return video_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Protocol::release_video() {
  // @@protoc_insertion_point(field_release:Protocol.video)
  if (!has_video()) {
    return NULL;
  }
  clear_has_video();
  return video_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Protocol::set_allocated_video(::std::string* video) {
  if (video != NULL) {
    set_has_video();
  } else {
    clear_has_video();
  }
  video_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video);
  // @@protoc_insertion_point(field_set_allocated:Protocol.video)
}

// optional bytes audio = 5;
inline bool Protocol::has_audio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Protocol::set_has_audio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Protocol::clear_has_audio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Protocol::clear_audio() {
  audio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_audio();
}
inline const ::std::string& Protocol::audio() const {
  // @@protoc_insertion_point(field_get:Protocol.audio)
  return audio_.GetNoArena();
}
inline void Protocol::set_audio(const ::std::string& value) {
  set_has_audio();
  audio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.audio)
}
#if LANG_CXX11
inline void Protocol::set_audio(::std::string&& value) {
  set_has_audio();
  audio_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.audio)
}
#endif
inline void Protocol::set_audio(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_audio();
  audio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.audio)
}
inline void Protocol::set_audio(const void* value, size_t size) {
  set_has_audio();
  audio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.audio)
}
inline ::std::string* Protocol::mutable_audio() {
  set_has_audio();
  // @@protoc_insertion_point(field_mutable:Protocol.audio)
  return audio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Protocol::release_audio() {
  // @@protoc_insertion_point(field_release:Protocol.audio)
  if (!has_audio()) {
    return NULL;
  }
  clear_has_audio();
  return audio_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Protocol::set_allocated_audio(::std::string* audio) {
  if (audio != NULL) {
    set_has_audio();
  } else {
    clear_has_audio();
  }
  audio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audio);
  // @@protoc_insertion_point(field_set_allocated:Protocol.audio)
}

// optional .Imu imu = 6;
inline bool Protocol::has_imu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Protocol::set_has_imu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Protocol::clear_has_imu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Protocol::clear_imu() {
  if (imu_ != NULL) imu_->Clear();
  clear_has_imu();
}
inline const ::Imu& Protocol::_internal_imu() const {
  return *imu_;
}
inline const ::Imu& Protocol::imu() const {
  const ::Imu* p = imu_;
  // @@protoc_insertion_point(field_get:Protocol.imu)
  return p != NULL ? *p : *reinterpret_cast<const ::Imu*>(
      &::_Imu_default_instance_);
}
inline ::Imu* Protocol::release_imu() {
  // @@protoc_insertion_point(field_release:Protocol.imu)
  clear_has_imu();
  ::Imu* temp = imu_;
  imu_ = NULL;
  return temp;
}
inline ::Imu* Protocol::mutable_imu() {
  set_has_imu();
  if (imu_ == NULL) {
    auto* p = CreateMaybeMessage<::Imu>(GetArenaNoVirtual());
    imu_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Protocol.imu)
  return imu_;
}
inline void Protocol::set_allocated_imu(::Imu* imu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_;
  }
  if (imu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu, submessage_arena);
    }
    set_has_imu();
  } else {
    clear_has_imu();
  }
  imu_ = imu;
  // @@protoc_insertion_point(field_set_allocated:Protocol.imu)
}

// optional int32 ksoo = 7;
inline bool Protocol::has_ksoo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Protocol::set_has_ksoo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Protocol::clear_has_ksoo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Protocol::clear_ksoo() {
  ksoo_ = 0;
  clear_has_ksoo();
}
inline ::google::protobuf::int32 Protocol::ksoo() const {
  // @@protoc_insertion_point(field_get:Protocol.ksoo)
  return ksoo_;
}
inline void Protocol::set_ksoo(::google::protobuf::int32 value) {
  set_has_ksoo();
  ksoo_ = value;
  // @@protoc_insertion_point(field_set:Protocol.ksoo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_qc_2dmessage_2eproto
